name: Bench Build Test

on:
  pull_request:

concurrency:
  group: ${{ github.repository }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  Bench-Build-Test:
    runs-on: ubuntu-latest
    container:
      image: docker.io/frappe/bench:latest
      options: --user root

    steps:
      - name: Setup Github ENV
        run: |
          echo "HOME=/home/frappe" >> $GITHUB_ENV
          echo "PATH=/home/frappe/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Create a new minimal bench
        run: |
          cd /home/frappe
          su frappe bash -c "bench init frappe-bench --skip-redis-config-generation --no-procfile --skip-assets"

      - name: Get Dependent Apps
        run: |
          set -x
          cd /home/frappe/frappe-bench
          git clone https://rtbot:${{ secrets.RTBOT_TOKEN }}@github.com/${{ github.event.pull_request.head.repo.full_name }} -b ${{ github.event.pull_request.head.ref }} app_repo \
            || (echo "❌ Git clone failed — check if branch or repo exists" && exit 1)
          if [ ! -d "app_repo" ]; then
            echo "❌ The repo 'app_repo' was not cloned correctly."
            exit 1
          fi
          DEPS=$(grep -Po "(?<=required_apps\s*=\s*\[)[^]]+" app_repo/*/hooks.py | tr -d '"' | tr -d "'" | tr ',' '\n' | awk '{$1=$1};1')
          rm -rf app_repo
          for dep in $DEPS; do
            echo "Getting dependent app: $dep"
            su frappe bash -c "bench get-app $dep"
          done

      - name: Get APP and Build
        run: |
          cd /home/frappe/frappe-bench
          su frappe bash -c "bench get-app https://rtbot:${{ secrets.RTBOT_TOKEN }}@github.com/${{ github.repository }} --branch ${{ github.head_ref || github.ref_name }} --resolve-deps"

      - name: Cleanup
        if: ${{ always() }}
        uses: rtCamp/action-cleanup@master